// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux16.hdl

/**
 * 16-bit multiplexor: 
 * for i = 0..15 out[i] = a[i] if sel == 0 
 *                        b[i] if sel == 1
 */

CHIP Mux16 {
    IN a[16], b[16], sel;
    OUT out[16];

    PARTS:
    // Put your code here:
Nand(a=sel,b=sel,out=SelComp);
And(a=a[0],b=SelComp,out=x0);
And(a=b[0],b=sel,out=w0);
Or(a=x0,b=w0,out=out[0]);


And(a=a[1],b=SelComp,out=x1);
And(a=b[1],b=sel,out=w1);
Or(a=x1,b=w1,out=out[1]);


And(a=a[2],b=SelComp,out=x2);
And(a=b[2],b=sel,out=w2);
Or(a=x2,b=w2,out=out[2]);


And(a=a[3],b=SelComp,out=x3);
And(a=b[3],b=sel,out=w3);
Or(a=x3,b=w3,out=out[3]);


And(a=a[4],b=SelComp,out=x4);
And(a=b[4],b=sel,out=w4);
Or(a=x4,b=w4,out=out[4]);


And(a=a[5],b=SelComp,out=x5);
And(a=b[5],b=sel,out=w5);
Or(a=x5,b=w5,out=out[5]);


And(a=a[6],b=SelComp,out=x6);
And(a=b[6],b=sel,out=w6);
Or(a=x6,b=w6,out=out[6]);


And(a=a[7],b=SelComp,out=x7);
And(a=b[7],b=sel,out=w7);
Or(a=x7,b=w7,out=out[7]);


And(a=a[8],b=SelComp,out=x8);
And(a=b[8],b=sel,out=w8);
Or(a=x8,b=w8,out=out[8]);


And(a=a[9],b=SelComp,out=x9);
And(a=b[9],b=sel,out=w9);
Or(a=x9,b=w9,out=out[9]);


And(a=a[10],b=SelComp,out=x10);
And(a=b[10],b=sel,out=w10);
Or(a=x10,b=w10,out=out[10]);


And(a=a[11],b=SelComp,out=x11);
And(a=b[11],b=sel,out=w11);
Or(a=x11,b=w11,out=out[11]);


And(a=a[12],b=SelComp,out=x12);
And(a=b[12],b=sel,out=w12);
Or(a=x12,b=w12,out=out[12]);


And(a=a[13],b=SelComp,out=x13);
And(a=b[13],b=sel,out=w13);
Or(a=x13,b=w13,out=out[13]);


And(a=a[14],b=SelComp,out=x14);
And(a=b[14],b=sel,out=w14);
Or(a=x14,b=w14,out=out[14]);

And(a=a[15],b=SelComp,out=x15);
And(a=b[15],b=sel,out=w15);
Or(a=x15,b=w15,out=out[15]);

}
